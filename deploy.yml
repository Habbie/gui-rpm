---
- hosts: c6deploy

  vars:
  - controlsecret: "{{ lookup('password', './controlsecret.cache') }}"
  - authrpm: pdns-static-0.0.20140214_4717_d464d8f-1.x86_64.rpm
  - recrpm: pdns-recursor-0.0.20140214_1078_d464d8f-1.x86_64.rpm
  - controlrpm: pdns-control-1392631006-1.x86_64.rpm
  - graphiterpm: pdns-graphite-1392576571-1.x86_64.rpm

  tasks:
  - name: fix clock
    shell: ntpdate ntp.xs4all.nl

  - name: disarm iptables
    shell: iptables -F INPUT

  - name: install selinux python bindings (Ansible needs these)
    yum: name=libselinux-python

  - name: install dig
    yum: name=bind-utils

  - name: upload RPMs
    copy: dest=/root src={{ item }}
    with_items:
    - '{{ authrpm }}'
    - '{{ recrpm }}'
    - '{{ controlrpm }}'
    - '{{ graphiterpm }}'

  - name: upload SQL schema
    copy: dest=/root src=schema.sql

  - name: install auth RPM
    yum: name=/root/{{ authrpm }}
    notify:
    - restart auth

  - name: install recursor RPM
    yum: name=/root/{{ recrpm }}
    notify:
    - restart recursor

  - name: install pdnscontrol RPM
    yum: name=/root/{{ controlrpm }}


  - name: install graphite RPM
    yum: name=/root/{{ graphiterpm }}
    notify:
    - init graphite

  - name: create pdns system user
    user: name=pdns system=yes

  - name: install postgres
    yum: name=postgresql-server
    notify:
    - init postgres
    - start and enable postgres
    - create pdns postgres user
    - create pdns postgres db
    - init pdns postgres schema
    - create pdnscontrol postgres user
    - create pdnscontrol postgres db

  - meta: flush_handlers # to get postgres up including pdnscontrol user+db

  - name: configure auth
    copy: src=confs/pdns.conf dest=/etc/powerdns/pdns.conf
    notify: 
    - restart auth

  - name: configure recursor
    copy: src=confs/recursor.conf dest=/etc/powerdns/recursor.conf
    notify: 
    - restart recursor

  - name: fix pdnscontrol static cache ownership
    shell: chown -R pdnscontrol /opt/pdnscontrol/pdnscontrol/static

  - name: configure pdnscontrol
    template: src=confs/pdnscontrol.conf.j2 dest=/opt/pdnscontrol/instance/pdnscontrol.conf owner=pdnscontrol
    notify: init pdnscontrol

  - meta: flush_handlers # to make sure we init pdnscontrol before starting it

  - name: copy addservers.sql
    copy: src=confs/addservers.sql dest=/tmp/addservers.sql mode=0644

  - name: add servers to pdnscontrol
    shell: su pdnscontrol -c 'psql pdnscontrol < /tmp/addservers.sql'

  - name: start daemons # enable is broken for ansible vs. upstart
    service: name={{ item }} state=started
    with_items:
    - pdns
    - pdns-recursor
    - graphite-carbon-cache
    - graphite-web
    - pdns2graphite
    - pdnscontrol

  handlers:
  - name: init postgres
    shell: service postgresql initdb

  - name: start and enable postgres
    service: name=postgresql enabled=yes state=started

  - name: create pdns postgres user
    shell: su postgres -c 'createuser -D -R -S pdns'

  - name: create pdns postgres db
    shell: su postgres -c 'createdb -O pdns pdns'

  - name: init pdns postgres schema
    shell: su pdns -c 'psql pdns' < schema.sql

  - name: create pdnscontrol postgres user
    shell: su postgres -c 'createuser -D -R -S pdnscontrol'

  - name: create pdnscontrol postgres db
    shell: su postgres -c 'createdb -O pdnscontrol pdnscontrol'

  - name: restart auth
    service: name=pdns state=restarted

  - name: restart recursor
    service: name=pdns-recursor state=restarted

  - name: restart pdnscontrol
    service: name=pdnscontrol state=restarted

  - name: init pdnscontrol
    shell: su pdnscontrol -c '. /opt/pdnscontrol/bin/activate ; cd /opt/pdnscontrol/instance ; python install.py'
    notify: restart pdnscontrol

  - name: init graphite
    shell: su graphite -c '. /opt/graphite/bin/activate ; cd /opt/graphite ; python webapp/graphite/manage.py syncdb --noinput'
